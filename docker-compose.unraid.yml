version: '3.8'

services:
  frontend:
    build:
      context: ./invoice-generator/invoice-generator
    container_name: invoice-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network
    volumes:
      - /mnt/user/appdata/invoice-generator/frontend-logs:/var/log/nginx

  backend:
    build:
      context: ./timesheet-backend
    container_name: timesheet-backend
    ports:
      - "3000:3000"
    depends_on:
      - db
    restart: unless-stopped
    environment:
      - DB_USER=${DB_USER}
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=5432
      - PORT=3000
    networks:
      - app-network
    volumes:
      - /mnt/user/appdata/invoice-generator/timesheet-backend:/app
      - /mnt/user/appdata/invoice-generator/backend-logs:/app/logs

  db:
    image: postgres:14-alpine
    container_name: postgres-db
    volumes:
      - /mnt/user/appdata/invoice-generator/postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
