name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          invoice-generator/invoice-generator/package-lock.json
          timesheet-backend/package-lock.json

    - name: Install frontend dependencies
      run: |
        cd invoice-generator/invoice-generator
        npm ci

    - name: Build frontend
      run: |
        cd invoice-generator/invoice-generator
        npm run build

    - name: Install backend dependencies
      run: |
        cd timesheet-backend
        npm ci

    - name: Run tests
      run: |
        cd invoice-generator/invoice-generator
        npm test -- --passWithNoTests

  build-and-push-docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build and push frontend
      uses: docker/build-push-action@v4
      with:
        context: ./invoice-generator/invoice-generator
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/invoice-frontend:latest

    - name: Build and push backend
      uses: docker/build-push-action@v4
      with:
        context: ./timesheet-backend
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/timesheet-backend:latest

  deploy:
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Deploy to Unraid
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.UNRAID_HOST }}
        username: ${{ secrets.UNRAID_USERNAME }}
        key: ${{ secrets.UNRAID_SSH_KEY }}
        script: |
          cd /path/to/deployment
          docker-compose pull
          docker-compose up -d
